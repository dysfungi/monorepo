services:
  api:
    platform: linux/amd64
    image: sjc.vultrcr.com/frankistry/automate/api:${APP_VERSION:-local}
    build:
      context: .
      target: final
    environment: &api_env
      DATABASE_HOST: postgres
      DATABASE_NAME: &db_name automate_app
      DATABASE_PASSWORD: &db_pw postgres
      DATABASE_SSL_MODE: prefer
      DATABASE_USERNAME: &db_user automate_api
      DROPBOX_CLIENT_ID: ${TF_VAR_automate_dropbox_client_id}
      DROPBOX_CLIENT_SECRET: ${TF_VAR_automate_dropbox_client_secret}
      DROPBOX_REDIRECT_BASE_URL: http://localhost:8080
      LOGGING_LEVEL: debug
      TODOIST_CLIENT_ID: ${TF_VAR_automate_todoist_client_id}
      TODOIST_CLIENT_SECRET: ${TF_VAR_automate_todoist_client_secret}
      TODOIST_VERIFICATION_TOKEN: ${TF_VAR_automate_todoist_verification_token}
    ports:
      - "8080"
    scale: 1
    depends_on:
      - postgres

  api-debug:
    platform: linux/amd64
    image: sjc.vultrcr.com/frankistry/automate/api-debug:local
    build:
      context: .
      target: debug
    entrypoint: [dotnet, watch, run]
    environment: *api_env
    ports:
      - "8080"
    depends_on:
      - postgres
    volumes:
      - ./AutoMate:/source/AutoMate

  api-functional-tests:
    platform: linux/amd64
    image: alpine/httpie
    restart: unless-stopped
    entrypoint: [/tests/functional.sh, http://api-debug:8080]
    depends_on:
      - api-debug
    volumes:
      - ./tests:/tests

  api-unit-tests:
    platform: linux/amd64
    image: sjc.vultrcr.com/frankistry/automate/api-unit-tests:local
    build:
      context: .
      target: unit-test
    entrypoint: [dotnet, watch, test]
    volumes:
      - ./AutoMate:/source/AutoMate
      - ./AutoMate.Tests:/source/AutoMate.Tests

  postgres:
    # https://hub.docker.com/_/postgres
    image: postgres:16
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_DB: *db_name
      POSTGRES_PASSWORD: *db_pw
      POSTGRES_USER: *db_user
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d

volumes:
  pgdata:
