services:
  api:
    platform: linux/amd64
    image: sjc.vultrcr.com/frankistry/automate/api:${APP_VERSION:-local}
    build:
      context: .
      target: final
    healthcheck: &api_healthcheck
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8080/-/startup
      interval: 10s
      timeout: 5s
      retries: 5
    environment: &api_env
      DATABASE_HOST: postgres
      DATABASE_NAME: &api_dbname automate_app
      DATABASE_PASSWORD: &api_dbpwd postgres
      DATABASE_SSL_MODE: prefer
      DATABASE_USERNAME: &api_dbuser automate_api
      DROPBOX_CLIENT_ID: ${TF_VAR_automate_dropbox_client_id}
      DROPBOX_CLIENT_SECRET: ${TF_VAR_automate_dropbox_client_secret}
      DROPBOX_REDIRECT_BASE_URL: http://localhost
      LOGGING_LEVEL: debug
      TODOIST_CLIENT_ID: ${TF_VAR_automate_todoist_client_id}
      TODOIST_CLIENT_SECRET: ${TF_VAR_automate_todoist_client_secret}
      TODOIST_VERIFICATION_TOKEN: ${TF_VAR_automate_todoist_verification_token}
    ports:
      - "8080"
    scale: 1
    depends_on:
      postgres:
        condition: service_healthy
      dbmigrate:
        condition: service_completed_successfully

  api-debug:
    platform: linux/amd64
    image: sjc.vultrcr.com/frankistry/automate/api-debug:local
    build:
      context: .
      target: debug
    healthcheck: *api_healthcheck
    entrypoint: [dotnet, watch, run]
    environment: *api_env
    ports:
      - "8080"
    depends_on:
      postgres:
        condition: service_healthy
      dbmigrate:
        condition: service_completed_successfully
    volumes:
      - ./AutoMate:/source/AutoMate

  api-functional-tests:
    platform: linux/amd64
    image: alpine/httpie
    restart: unless-stopped
    entrypoint: [/tests/functional.sh, http://api-debug:8080]
    depends_on:
      - api-debug
    volumes:
      - ./tests:/tests

  api-unit-tests:
    platform: linux/amd64
    image: sjc.vultrcr.com/frankistry/automate/api-unit-tests:local
    build:
      context: .
      target: unit-test
    entrypoint: [dotnet, watch, test]
    volumes:
      - ./AutoMate:/source/AutoMate
      - ./AutoMate.Tests:/source/AutoMate.Tests

  dbmigrate:
    platform: linux/amd64
    image: ghcr.io/amacneil/dbmate
    restart: on-failure:5
    command:
      - up
      - --strict
      - --verbose
    environment:
      DATABASE_URL: postgres://pgadmin:postgres@postgres:5432/automate_app?sslmode=disable
      DBMATE_WAIT: "true"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./db:/db

  postgres:
    # https://hub.docker.com/_/postgres
    image: postgres:16
    restart: always
    shm_size: 128mb
    command: ["postgres", "-c", "log_statement=all"]
    healthcheck:
      test: pg_isready
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      PGDATABASE: &admin_dbname defaultdb
      PGPASSWORD: &admin_dbpwd postgres
      PGSSLMODE: allow
      PGUSER: &admin_dbuser pgadmin
      POSTGRES_DB: *admin_dbname
      POSTGRES_PASSWORD: *admin_dbpwd
      POSTGRES_USER: *admin_dbuser
    ports:
      - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d

volumes:
  pgdata:
